-- SQL Aggregates Projects Codecademy : Hacker News --
-- Q1 --
SELECT title, score
 FROM hacker_news
 ORDER BY score DESC
 LIMIT 5;
 -- Q2 --
  SELECT SUM(score)
 FROM hacker_news;
 -- Q3 --
 SELECT user, SUM(score)
 FROM hacker_news
 GROUP BY score
 HAVING SUM(score)> 200
 ORDER BY 2 DESC;
 -- Q4 --
-- SELECT SUM(score)/COUNT(score)
-- FROM hacker_news;
SELECT (517 + 309 + 304 + 282) / 6366.0;
-- Q5 --
SELECT user, COUNT(*)
FROM hacker_news
WHERE url LIKE '%dQw4w9WgXcQ%'
GROUP BY user
ORDER BY COUNT(*) DESC;
-- Q6 --
--SELECT CASE
--WHEN url LIKE '%github%' THEN 'GitHub'
--WHEN url LIKE '%medium.com%' THEN 'Medium'
--WHEN url LIKE '%nytimes.com%' THEN 'New York Times'
--ELSE 'Other'
--END AS 'Source'
--FROM hacker_news;
-- Q7 --
SELECT CASE
WHEN url LIKE '%github%' THEN 'GitHub'
WHEN url LIKE '%medium.com%' THEN 'Medium'
WHEN url LIKE '%nytimes.com%' THEN 'New York Times'
ELSE 'Other'
END AS 'Source',
COUNT(*)
FROM hacker_news
GROUP BY 1;
-- Q8 --
SELECT timestamp
FROM hacker_news
LIMIT 10;
-- Q9 --
SELECT timestamp, strftime('%H', timestamp)
FROM hacker_news
GROUP BY 1
LIMIT 20;
-- Q10 --
SELECT strftime('%H', timestamp), AVG(score), COUNT(*)
FROM hacker_news
GROUP BY 1
ORDER BY 1;
-- Q11 --
SELECT strftime('%H:%M',timestamp) AS 'Hour', ROUND(AVG(score),1) AS 'Average Score', COUNT(*) AS '# of Stories'
FROM hacker_news
WHERE timestamp IS NOT NULL
GROUP BY 1
ORDER BY 1;
